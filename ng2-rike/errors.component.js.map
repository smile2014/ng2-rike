{"version":3,"sources":["ng2-rike/errors.component.ts"],"names":[],"mappings":"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","file":"ng2-rike/errors.component.js","sourcesContent":["import {Component, Input, OnInit, OnDestroy, Optional} from \"@angular/core\";\nimport {ErrorCollector, ErrorSubscription} from \"./error-collector\";\nimport {FieldErrors, FieldError} from \"./field-error\";\n\n@Component({\n    selector: '[rikeErrors],[rikeErrorsField]',\n    template:\n    `\n    <ul class=\"rike-error-list\" *ngIf=\"errors.length\">\n        <li class=\"rike-error\" *ngFor=\"let error of errors\">{{error.message}}</li>\n    </ul>\n    `,\n    host: {\n        \"[class.rike-errors]\": \"true\"\n    }\n})\nexport class RikeErrorsComponent implements OnInit, OnDestroy {\n\n    private _rikeErrorsField = \"*\";\n    private _errors: FieldError[] = [];\n    private _init = false;\n    private _subscription?: ErrorSubscription;\n\n    constructor(@Optional() private _collector?: ErrorCollector) {\n    }\n\n    get rikeErrorsField(): string {\n        return this._rikeErrorsField;\n    }\n\n    @Input()\n    set rikeErrorsField(field: string) {\n        if (this._rikeErrorsField === field) {\n            return;\n        }\n        this._rikeErrorsField = field;\n        if (this._init) {\n            this.unsubscribe();\n            this.subscribe();\n        }\n    }\n\n    get rikeErrors(): ErrorCollector {\n        return this._collector || (this._collector = this.createCollector());\n    }\n\n    @Input()\n    set rikeErrors(collector: ErrorCollector) {\n        this._collector = collector;\n    }\n\n    get errors(): FieldError[] {\n        return this._errors;\n    }\n\n    ngOnInit() {\n        this._init = true;\n        this.subscribe();\n    }\n\n    ngOnDestroy() {\n        this._init = false;\n        this.unsubscribe();\n    }\n\n    //noinspection JSMethodCanBeStatic\n    protected createCollector(): ErrorCollector {\n        return new ErrorCollector();\n    }\n\n    protected updateErrors(errors: FieldErrors) {\n\n        const list: FieldError[] = [];\n\n        for (let field in errors) {\n            if (errors.hasOwnProperty(field)) {\n                list.push(...errors[field]);\n            }\n        }\n\n        this._errors = list;\n    }\n\n    private subscribe() {\n        if (this.rikeErrorsField) {\n            this._subscription =\n                this.rikeErrors.subscribe(this.rikeErrorsField, errors => this.updateErrors(errors)).refresh();\n        }\n    }\n\n    private unsubscribe() {\n        this._errors = [];\n\n        const subscription = this._subscription;\n\n        if (subscription) {\n            delete this._subscription;\n            subscription.unsubscribe();\n        }\n    }\n\n}\n"],"sourceRoot":"/source/"}